name: SonarCloud Analysis

on:
  push:
    branches:
      - main
    paths:
        - 'RPAs/FaturaPdfCatolica/**'
        - 'RPAs/HistoricoFipe/**'

jobs:
  sonarcloud:
    runs-on: windows-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: zulu

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.x

      - name: Install SonarCloud Scanner
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Analyze FaturaPdfCatolica
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd RPAs/FaturaPdfCatolica
          dotnet-sonarscanner begin /k:"rpasboettscher_faturapdfcatolica" /o:"rpasboettscher" \
            /d:sonar.branch.name="main" \
            /d:sonar.projectBaseDir="D:\a\RpaBoettscher\RpaBoettscher\RPAs\FaturaPdfCatolica" \
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.cs.vstest.reportsPaths="**/*.trx" \
            /d:sonar.cs.coverageReportPaths="**/coverage.opencover.xml"
          dotnet build FaturaPdfCatolica.sln
          dotnet test FaturaPdfCatolica.sln --logger "trx" --collect:"XPlat Code Coverage"
          dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

      - name: Analyze HistoricoFipe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd RPAs/HistoricoFipe
          dotnet-sonarscanner begin /k:"rpasboettscher_historicofipe" /o:"rpasboettscher" \
            /d:sonar.branch.name="main" \
            /d:sonar.projectBaseDir="D:\a\RpaBoettscher\RpaBoettscher\RPAs\HistoricoFipe" \
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.cs.vstest.reportsPaths="**/*.trx" \
            /d:sonar.cs.coverageReportPaths="**/coverage.opencover.xml"
          dotnet build HistoricoFipe.sln
          dotnet test HistoricoFipe.sln --logger "trx" --collect:"XPlat Code Coverage"
          dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
